{"ast":null,"code":"import { clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n\n// API base URL\nexport const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Format currency\nexport function formatCurrency(amount, currency = 'USD') {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: currency\n  }).format(amount);\n}\n\n// Format date\nexport function formatDate(date) {\n  return new Intl.DateTimeFormat('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  }).format(new Date(date));\n}\n\n// Generate unique ID\nexport function generateId() {\n  return Math.random().toString(36).substr(2, 9);\n}\n\n// Validate email\nexport function isValidEmail(email) {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n}\n\n// Sleep function for delays\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n// Debounce function\nexport function debounce(func, wait) {\n  let timeout;\n  return (...args) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), wait);\n  };\n}\n\n// Throttle function\nexport function throttle(func, limit) {\n  let inThrottle;\n  return (...args) => {\n    if (!inThrottle) {\n      func(...args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n}\n\n// Get initials from name\nexport function getInitials(name) {\n  return name.split(' ').map(word => word.charAt(0)).join('').toUpperCase().slice(0, 2);\n}\n\n// Format file size\nexport function formatFileSize(bytes) {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\n// Calculate days between dates\nexport function daysBetween(date1, date2) {\n  const oneDay = 24 * 60 * 60 * 1000;\n  const firstDate = new Date(date1);\n  const secondDate = new Date(date2);\n  return Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / oneDay));\n}\n\n// Check if date is today\nexport function isToday(date) {\n  const today = new Date();\n  const checkDate = new Date(date);\n  return checkDate.getDate() === today.getDate() && checkDate.getMonth() === today.getMonth() && checkDate.getFullYear() === today.getFullYear();\n}\n\n// Capitalize first letter\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n// Truncate text\nexport function truncate(str, length) {\n  return str.length > length ? str.substring(0, length) + '...' : str;\n}\n\n// Utility function to format date ranges\nexport const getFormattedDateRange = (fromDate, toDate) => {\n  if (!fromDate || !toDate) return '';\n  const from = new Date(fromDate);\n  const to = new Date(toDate);\n  const options = {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric'\n  };\n  return `${from.toLocaleDateString('en-US', options)} - ${to.toLocaleDateString('en-US', options)}`;\n};","map":{"version":3,"names":["clsx","twMerge","cn","inputs","API_BASE_URL","process","env","REACT_APP_API_URL","formatCurrency","amount","currency","Intl","NumberFormat","style","format","formatDate","date","DateTimeFormat","year","month","day","Date","generateId","Math","random","toString","substr","isValidEmail","email","emailRegex","test","sleep","ms","Promise","resolve","setTimeout","debounce","func","wait","timeout","args","clearTimeout","throttle","limit","inThrottle","getInitials","name","split","map","word","charAt","join","toUpperCase","slice","formatFileSize","bytes","k","sizes","i","floor","log","parseFloat","pow","toFixed","daysBetween","date1","date2","oneDay","firstDate","secondDate","round","abs","getTime","isToday","today","checkDate","getDate","getMonth","getFullYear","capitalize","str","truncate","length","substring","getFormattedDateRange","fromDate","toDate","from","to","options","toLocaleDateString"],"sources":["C:/Users/Ashu LOQ/Desktop/Projects/travel-Rogue-2/frontend/src/lib/utils.js"],"sourcesContent":["import { clsx } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\";\r\n\r\nexport function cn(...inputs) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n\r\n// API base URL\r\nexport const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Format currency\r\nexport function formatCurrency(amount, currency = 'USD') {\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: currency,\r\n  }).format(amount);\r\n}\r\n\r\n// Format date\r\nexport function formatDate(date) {\r\n  return new Intl.DateTimeFormat('en-US', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n  }).format(new Date(date));\r\n}\r\n\r\n// Generate unique ID\r\nexport function generateId() {\r\n  return Math.random().toString(36).substr(2, 9);\r\n}\r\n\r\n// Validate email\r\nexport function isValidEmail(email) {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n}\r\n\r\n// Sleep function for delays\r\nexport function sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n// Debounce function\r\nexport function debounce(func, wait) {\r\n  let timeout;\r\n  return (...args) => {\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => func(...args), wait);\r\n  };\r\n}\r\n\r\n// Throttle function\r\nexport function throttle(func, limit) {\r\n  let inThrottle;\r\n  return (...args) => {\r\n    if (!inThrottle) {\r\n      func(...args);\r\n      inThrottle = true;\r\n      setTimeout(() => (inThrottle = false), limit);\r\n    }\r\n  };\r\n}\r\n\r\n// Get initials from name\r\nexport function getInitials(name) {\r\n  return name\r\n    .split(' ')\r\n    .map(word => word.charAt(0))\r\n    .join('')\r\n    .toUpperCase()\r\n    .slice(0, 2);\r\n}\r\n\r\n// Format file size\r\nexport function formatFileSize(bytes) {\r\n  if (bytes === 0) return '0 Bytes';\r\n  const k = 1024;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n}\r\n\r\n// Calculate days between dates\r\nexport function daysBetween(date1, date2) {\r\n  const oneDay = 24 * 60 * 60 * 1000;\r\n  const firstDate = new Date(date1);\r\n  const secondDate = new Date(date2);\r\n  return Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / oneDay));\r\n}\r\n\r\n// Check if date is today\r\nexport function isToday(date) {\r\n  const today = new Date();\r\n  const checkDate = new Date(date);\r\n  return (\r\n    checkDate.getDate() === today.getDate() &&\r\n    checkDate.getMonth() === today.getMonth() &&\r\n    checkDate.getFullYear() === today.getFullYear()\r\n  );\r\n}\r\n\r\n// Capitalize first letter\r\nexport function capitalize(str) {\r\n  return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\n// Truncate text\r\nexport function truncate(str, length) {\r\n  return str.length > length ? str.substring(0, length) + '...' : str;\r\n}\r\n\r\n// Utility function to format date ranges\r\nexport const getFormattedDateRange = (fromDate, toDate) => {\r\n  if (!fromDate || !toDate) return '';\r\n  \r\n  const from = new Date(fromDate);\r\n  const to = new Date(toDate);\r\n  \r\n  const options = { month: 'short', day: 'numeric', year: 'numeric' };\r\n  \r\n  return `${from.toLocaleDateString('en-US', options)} - ${to.toLocaleDateString('en-US', options)}`;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}